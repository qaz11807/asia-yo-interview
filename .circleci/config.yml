# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

executors:
  python:
    docker:
      - image: python:3.9.0-alpine

orbs:
  ruby: circleci/ruby@2.1.0
  aws-cli: circleci/aws-cli@4.0.0
  aws-ecr: circleci/aws-ecr@9.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  test:
    parallelism: 3
    docker:
      - image: cimg/ruby:3.0.4
      - image: cimg/postgres:15.3
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: rails_starter_test
          POSTGRES_PASSWORD: root
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      RAILS_ENV: test
      BUNDLE_PATH: vendor/bundle
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - ruby/install-deps
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: bundle exec rails db:migrate --trace
      # Run rspec in parallel
      - ruby/rspec-test

  deploy:
    executor: python
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible
            ansible --version
      - run:
          name: Deploy to cluster
          command: |
            cd .circleci/.ansible
            echo $VAULT_PASS > secret.txt
            ansible-playbook deploy.yml

# Orchestrate jobs using workflows
# See: https://circlevscode-file://vscode-app/c:/Users/CHANG-CHENG-CHIH/AppData/Local/Programs/Microsoft%20VS%20Code/resources/app/out/vs/code/electron-sandbox/workbench/workbench.htmlci.com/docs/configuration-reference/#workflows
workflows:
  deploy-workflow:
    jobs:
      - test
      - aws-ecr/build_and_push_image:
          account_id: ${AWS_ACCOUNT_ID}
          auth:
            - aws-cli/setup:
                aws_access_key_id: AWS_ACCESS_KEY
                aws_secret_access_key: AWS_SECRET_KEY
                region: AWS_REGION
          region: ${AWS_REGION}
          create_repo: true
          no_output_timeout: 20m
          public_registry: false
          push_image: true
          repo: rails-starter
          repo_scan_on_push: true
          skip_when_tags_exist: false
          tag: latest

          filters:
            branches:
              only:           
                - master
                - preparing
                - circleci-project-setup

          requires:
            - test
      - deploy:
          requires:
            - aws-ecr/build_and_push_image